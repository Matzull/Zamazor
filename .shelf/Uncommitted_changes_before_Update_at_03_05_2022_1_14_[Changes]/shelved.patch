Index: src/View/UserInfoWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View;\r\n\r\nimport Misc.Util;\r\nimport ModeloDominio.Comprador;\r\nimport ModeloDominio.Vendedor;\r\nimport View.Controllers.ArticuloController;\r\nimport View.Controllers.CompradorController;\r\nimport View.Controllers.VendedorController;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\n\r\npublic class UserInfoWindow extends JFrame {\r\n\r\n    private JPanel contentPane;\r\n    private Vendedor vendedor;\r\n    private Comprador comprador;\r\n    private ImageIcon user, cart, sad, edit, save, volver;\r\n    private DefaultTableModel tabla;\r\n    private JTextField nombreText;\r\n    private JTextField emailText;\r\n    private JTextField idText;\r\n    private JTextField userText;\r\n    private JTextField telefonoText;\r\n    private JPasswordField passwordField;\r\n    private boolean editable;\r\n    private JButton pedidosButton, modificarButton, eliminarButton, cartButtton, returnButton;\r\n    private CompradorController _cctrl;\r\n    private VendedorController _vctrl;\r\n    private ArticuloController _actrl;\r\n\r\n\r\n    /**\r\n     * En esta constructora se activa cuando no se ha\r\n     */\r\n    public UserInfoWindow() {\r\n        this.setTitle(\"Informacion de usuario\");\r\n        loadIcon();\r\n        initGUI();\r\n        this.setVisible(true);\r\n        editable = false;\r\n    }\r\n\r\n    /**\r\n     * esta constructora de la ventana se activa cuando se registra un vendedor\r\n     * @param vendedor se pasa a la constructora el vendedor registrado y se cargaran\r\n     *        todos sus datos (con fillVendor()) junto con la ventana en la funcion initGUI()\r\n     */\r\n    public UserInfoWindow(Vendedor vendedor, VendedorController _vctrl, ArticuloController _actrl) {\r\n        this.vendedor = vendedor;\r\n        this._actrl = _actrl;\r\n        this._vctrl = _vctrl;\r\n        loadIcon();\r\n        this.setVisible(true);\r\n        initGUI();\r\n        fillVendor();\r\n    }\r\n    /**\r\n     * esta constructora de la ventana se activa cuando se registra un vendedor\r\n     * @param comprador se pasa a la constructora el vendedor registrado y se cargaran\r\n     *        todos sus datos (con fillBuyer()) junto con la ventana en la funcion initGUI()\r\n     */\r\n    public UserInfoWindow(Comprador comprador, CompradorController _cctrl) {\r\n        this.comprador = comprador;\r\n        loadIcon();\r\n        this._cctrl = _cctrl;\r\n        this.setVisible(true);\r\n        initGUI();\r\n        fillBuyer();\r\n    }\r\n\r\n    /**\r\n     * se encarga de iniciar la ventana de informacion de usuario\r\n     */\r\n    private void initGUI() {\r\n        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);\r\n        setBounds(100, 100, 700, 601);\r\n        contentPane = new JPanel();\r\n        contentPane.setBorder(new EmptyBorder(0,0,0,0));\r\n        setContentPane(contentPane);\r\n        contentPane.setLayout(new BorderLayout(0, 0));\r\n\r\n        JPanel buttonsPanel = new JPanel();\r\n        buttonsPanel.setBackground(Util._barColor);\r\n        contentPane.add(buttonsPanel, BorderLayout.SOUTH);\r\n        buttonsPanel.setLayout(new GridLayout(0, 7, 0, 0));\r\n        buttonsPanel.setBorder(new EmptyBorder(5, 0, 5 ,0));\r\n\r\n        if(comprador != null) {\r\n            pedidosButton = new JButton(\"Pedidos\");\r\n            pedidosButton.setBackground(Util._barColor);\r\n            pedidosButton.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent e) {\r\n                    //Mostrar los pedidos del usuario\r\n                    UserPedidos pe = new UserPedidos(comprador, _cctrl);\r\n                }\r\n            });\r\n        }\r\n        else if(vendedor != null){\r\n            pedidosButton = new JButton(\"Articulos\");\r\n            pedidosButton.setBackground(Util._barColor);\r\n            pedidosButton.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent e) {\r\n                    //Mostrar los pedidos del usuario\r\n                    UserArticulos ar = new UserArticulos(vendedor, _vctrl, _actrl);\r\n                }\r\n            });\r\n        }\r\n        \r\n        JSeparator separator = new JSeparator();\r\n        separator.setForeground(Util._barColor);\r\n        separator.setBackground(Util._barColor);\r\n        buttonsPanel.add(separator);\r\n        pedidosButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        buttonsPanel.add(pedidosButton);\r\n\r\n        modificarButton = new JButton(\"Modificar\");\r\n        modificarButton.setBackground(Util._barColor);\r\n        modificarButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                if(!editable) {\r\n                    int i = JOptionPane.showConfirmDialog(null, \"多Esta seguro de querer modificar su cuenta?\", \"Modificar cuenta\", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);\r\n                    if(i == JOptionPane.YES_OPTION) {\r\n                        JOptionPane.showMessageDialog(null, \"Habilitado modo edicion de cuenta\", \"Modificar cuenta\", 0 , edit);\r\n                        enableEdit();\r\n                    }\r\n                }\r\n                else {\r\n                    int i = JOptionPane.showConfirmDialog(null, \"多Esta seguro de los datos modificados?\", \"Modificar cuenta\", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);\r\n                    if(i == JOptionPane.YES_OPTION) {\r\n                        JOptionPane.showMessageDialog(null, \"Datos actualizados. Desactivado modo edicion de cuenta\", \"Modificar cuenta\", 0 , save);\r\n                        enableEdit();\r\n                        comprador.setNombre(nombreText.getText());\r\n                        comprador.setEmail(emailText.getText());\r\n                        comprador.setCuenta(userText.getText());\r\n                        _cctrl.modificarComprador(comprador);\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n        \r\n        JSeparator separator_1 = new JSeparator();\r\n        separator_1.setBackground(Util._barColor);\r\n        separator_1.setForeground(Util._barColor);\r\n        buttonsPanel.add(separator_1);\r\n        modificarButton.setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));\r\n        buttonsPanel.add(modificarButton);\r\n\r\n        eliminarButton = new JButton(\"Borrar\");\r\n        eliminarButton.setBackground(Util._barColor);\r\n        eliminarButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                int i = JOptionPane.showConfirmDialog(null, \"多Estas seguro de que quieres borrar tu cuenta?\", \"Borrar cuenta\", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);\r\n                if(i == JOptionPane.YES_OPTION) {\r\n                    int j = JOptionPane.showConfirmDialog(null, \"多Estas REALMENTE seguro de que quieres BORRAR tu cuenta?\", \"Borrar cuenta\", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);\r\n                    if(j == JOptionPane.YES_OPTION) {\r\n                        JOptionPane.showMessageDialog(null, \"Cuenta eliminada de Zamazor\", \"CUENTA BORRADA\", 0 ,sad);\r\n                        dispose();\r\n                        _cctrl.bajaComprador(comprador.getId());\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        \r\n        JSeparator separator_2 = new JSeparator();\r\n        separator_2.setBackground(Util._barColor);\r\n        separator_2.setForeground(Util._barColor);\r\n        buttonsPanel.add(separator_2);\r\n        eliminarButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        buttonsPanel.add(eliminarButton);\r\n\r\n        JPanel infoPanel = new JPanel();\r\n        infoPanel.setBackground(Util._bodyColor);\r\n        contentPane.add(infoPanel, BorderLayout.CENTER);\r\n        infoPanel.setLayout(null);\r\n\r\n        JLabel idLabel = new JLabel(\"ID:\");\r\n        idLabel.setBounds(72, 39, 106, 53);\r\n        idLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n        idLabel.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        infoPanel.add(idLabel);\r\n\r\n        idText = new JTextField();\r\n        idText.setBounds(171, 39, 384, 53);\r\n        idText.setHorizontalAlignment(SwingConstants.LEFT);\r\n        idText.setEditable(false);\r\n        infoPanel.add(idText);\r\n        idText.setColumns(10);\r\n\r\n        JLabel nombreLabel = new JLabel(\"Nombre:\");\r\n        nombreLabel.setBounds(41, 120, 179, 53);\r\n        nombreLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n        infoPanel.add(nombreLabel);\r\n\r\n        nombreText = new JTextField();\r\n        nombreText.setBounds(171, 120, 384, 53);\r\n        nombreText.setHorizontalAlignment(SwingConstants.LEFT);\r\n        nombreText.setEditable(false);\r\n        infoPanel.add(nombreText);\r\n        nombreText.setColumns(10);\r\n\r\n        JLabel emailLabel = new JLabel(\"Email:\");\r\n        emailLabel.setBounds(41, 201, 179, 53);\r\n        emailLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n        infoPanel.add(emailLabel);\r\n\r\n        emailText = new JTextField();\r\n        emailText.setBounds(171, 201, 384, 53);\r\n        emailText.setHorizontalAlignment(SwingConstants.LEFT);\r\n        emailText.setEditable(false);\r\n        infoPanel.add(emailText);\r\n        emailText.setColumns(10);\r\n        userText = new JTextField();\r\n        if(comprador != null) {\r\n            JLabel cuentaLabel = new JLabel(\"Nombre de usuario:\");\r\n            cuentaLabel.setBounds(21, 280, 179, 53);\r\n            cuentaLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n            infoPanel.add(cuentaLabel);\r\n            userText.setBounds(171, 280, 384, 53);\r\n            userText.setEditable(false);\r\n            userText.setHorizontalAlignment(SwingConstants.LEFT);\r\n            infoPanel.add(userText);\r\n            userText.setColumns(10);\r\n        }\r\n        else if(vendedor != null) {\r\n            JLabel telefonoLabel = new JLabel(\"Telefono:\");\r\n            telefonoLabel.setBounds(21, 280, 179, 53);\r\n            telefonoLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n            infoPanel.add(telefonoLabel);\r\n\r\n            telefonoText = new JTextField();\r\n            telefonoText.setBounds(171, 280, 384, 53);\r\n            telefonoText.setEditable(false);\r\n            telefonoText.setHorizontalAlignment(SwingConstants.LEFT);\r\n            infoPanel.add(telefonoText);\r\n            telefonoText.setColumns(10);\r\n\r\n\r\n        }\r\n\r\n        JLabel passLabel = new JLabel(\"Contrase\\u00F1a:\");\r\n        passLabel.setBounds(21, 358, 179, 53);\r\n        passLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n        infoPanel.add(passLabel);\r\n\r\n        passwordField = new JPasswordField();\r\n        passwordField.setBounds(171, 358, 384, 53);\r\n        passwordField.setEditable(false);\r\n        passwordField.setEchoChar('*');\r\n        infoPanel.add(passwordField);\r\n        \r\n        JToolBar toolBar = new JToolBar();\r\n        toolBar.setBackground(Util._barColor);\r\n        contentPane.add(toolBar, BorderLayout.NORTH);\r\n        toolBar.setSize(120, 60);\r\n\r\n\r\n        JLabel userLabel = new JLabel(\"\");\r\n        userLabel.setBounds(600, 50, 179, 53);\r\n        userLabel.setIcon(Util.scaleImage(user,0.5));\r\n        infoPanel.add(userLabel);\r\n\r\n        returnButton = new JButton();\r\n        returnButton.setBorder(null);\r\n        returnButton.setBackground(Util._bodyColor);\r\n        returnButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        returnButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                dispose();\r\n            }\r\n        });\r\n        returnButton.setIcon(volver);\r\n        toolBar.add(returnButton);\r\n        \r\n        toolBar.add(Box.createHorizontalGlue());\r\n\r\n        if(vendedor == null)\r\n        {\r\n            cartButtton = new JButton(\"\");\r\n            cartButtton.setBorderPainted(false);\r\n            cartButtton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n            cartButtton.setBackground(Util._barColor);\r\n            cartButtton.setBorder(UIManager.getBorder(\"DesktopIcon.border\"));\r\n            toolBar.add(cartButtton);\r\n            cartButtton.setIcon(Util.scaleImage(cart,0.35));\r\n            cartButtton.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent e) {\r\n                    CarritoCompra cart = new CarritoCompra(comprador, _cctrl);\r\n                }\r\n            });\r\n        }\r\n        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n    }\r\n\r\n    private void enableEdit() {\r\n\r\n        if(!editable) {\r\n            nombreText.setEditable(true);\r\n            emailText.setEditable(true);\r\n            idText.setEditable(false);\r\n            userText.setEditable(true);\r\n            passwordField.setEditable(false);\r\n            telefonoText.setEditable(true);\r\n            editable = true;\r\n            //passwordField.setEchoChar((char) 0);\r\n            cartButtton.setEnabled(false);\r\n            eliminarButton.setEnabled(false);\r\n            pedidosButton.setEnabled(false);\r\n            returnButton.setEnabled(false);\r\n            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        }\r\n        else {\r\n            nombreText.setEditable(false);\r\n            emailText.setEditable(false);\r\n            idText.setEditable(false);\r\n            userText.setEditable(false);\r\n            telefonoText.setEditable(false);\r\n            telefonoText.setEditable(false);\r\n            passwordField.setEditable(false);\r\n            editable = false;\r\n            passwordField.setEchoChar('*');\r\n            cartButtton.setEnabled(true);\r\n            eliminarButton.setEnabled(true);\r\n            pedidosButton.setEnabled(true);\r\n            returnButton.setEnabled(true);\r\n            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        }\r\n    }\r\n\r\n    private void loadIcon() {\r\n        try {\r\n            this.user = new ImageIcon(\"resources/user1.png\");\r\n            this.cart = new ImageIcon(\"resources/cart.png\");\r\n            this.sad = new ImageIcon(\"resources/sad.gif\");\r\n            this.edit = new ImageIcon(\"resources/edit.png\");\r\n            this.save = new ImageIcon(\"resources/save.png\");\r\n            this.volver = new ImageIcon(\"resources/volver.png\");\r\n        } catch (Exception e) {\r\n        }\r\n    }\r\n\r\n    private void fillVendor()\r\n    {\r\n        idText.setText(vendedor.getId().toString());\r\n        nombreText.setText(vendedor.getNombre());\r\n        emailText.setText(vendedor.getEmail());\r\n        telefonoText.setText(vendedor.getTelefono().toString());\r\n        passwordField.setText(vendedor.getPassword());\r\n    }\r\n\r\n    private void fillBuyer()\r\n    {\r\n        idText.setText(comprador.getId().toString());\r\n        nombreText.setText(comprador.getNombre());\r\n        emailText.setText(comprador.getEmail());\r\n        userText.setText(comprador.getCuenta());\r\n        passwordField.setText(comprador.getPassword());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
diff --git a/src/View/UserInfoWindow.java b/src/View/UserInfoWindow.java
--- a/src/View/UserInfoWindow.java	(revision 9c7dc4ec8de4ceaf2b7744eca15f13fdba8d0b96)
+++ b/src/View/UserInfoWindow.java	(date 1651533093895)
@@ -96,17 +96,16 @@
             pedidosButton.setBackground(Util._barColor);
             pedidosButton.addActionListener(new ActionListener() {
                 public void actionPerformed(ActionEvent e) {
-                    //Mostrar los pedidos del usuario
                     UserPedidos pe = new UserPedidos(comprador, _cctrl);
                 }
             });
         }
+
         else if(vendedor != null){
             pedidosButton = new JButton("Articulos");
             pedidosButton.setBackground(Util._barColor);
             pedidosButton.addActionListener(new ActionListener() {
                 public void actionPerformed(ActionEvent e) {
-                    //Mostrar los pedidos del usuario
                     UserArticulos ar = new UserArticulos(vendedor, _vctrl, _actrl);
                 }
             });
@@ -142,7 +141,6 @@
                         _cctrl.modificarComprador(comprador);
                     }
                 }
-
             }
         });
         
@@ -162,8 +160,8 @@
                     int j = JOptionPane.showConfirmDialog(null, "多Estas REALMENTE seguro de que quieres BORRAR tu cuenta?", "Borrar cuenta", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                     if(j == JOptionPane.YES_OPTION) {
                         JOptionPane.showMessageDialog(null, "Cuenta eliminada de Zamazor", "CUENTA BORRADA", 0 ,sad);
-                        dispose();
                         _cctrl.bajaComprador(comprador.getId());
+                        dispose();
                     }
                 }
             }
@@ -241,8 +239,6 @@
             telefonoText.setHorizontalAlignment(SwingConstants.LEFT);
             infoPanel.add(telefonoText);
             telefonoText.setColumns(10);
-
-
         }
 
         JLabel passLabel = new JLabel("Contrase\u00F1a:");
@@ -281,9 +277,9 @@
         
         toolBar.add(Box.createHorizontalGlue());
 
-        if(vendedor == null)
-        {
-            cartButtton = new JButton("");
+        cartButtton = new JButton("");
+        if(vendedor == null)
+        {
             cartButtton.setBorderPainted(false);
             cartButtton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
             cartButtton.setBackground(Util._barColor);
Index: src/View/UserArticulos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View;\r\n\r\nimport Misc.Util;\r\nimport ModeloDominio.Articulo;\r\nimport ModeloDominio.Comprador;\r\nimport ModeloDominio.Pedido;\r\nimport ModeloDominio.Vendedor;\r\nimport View.Controllers.ArticuloController;\r\nimport View.Controllers.CompradorController;\r\nimport View.Controllers.PedidoController;\r\nimport View.Controllers.VendedorController;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport javax.swing.border.LineBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class UserArticulos extends JDialog {\r\n    private JPanel contentPane;\r\n    private DefaultListModel<Articulo> modeloJLista;\r\n    JLabel loginIcon;\r\n    JScrollPane scrollPane;\r\n    JLabel[] labelsParaImagenes;\r\n    private Map<Integer, ImageIcon> imageMap;\r\n    private Articulo _articulo;\r\n    private JButton ArticulosButton;\r\n    private PedidoController _pctrl;\r\n    private VendedorController _vctrl;\r\n    private ArticuloController _actrl;\r\n    private Vendedor v;\r\n    private JButton volverButton;\r\n\r\n\r\n    public UserArticulos(Vendedor v, VendedorController _vctrl, ArticuloController _actrl){\r\n        setModal(true);\r\n        this.v = v;\r\n        this._vctrl = _vctrl;\r\n        this._actrl = _actrl;\r\n        initGUI();\r\n        setVisible(true);\r\n    }\r\n\r\n    private Map<Integer, ImageIcon> createImageMap(java.util.List<Articulo> fullTable) {\r\n\r\n        Map<Integer, ImageIcon> map = new HashMap<>();\r\n        for (Articulo s : fullTable) {\r\n            map.put(s.getId(), s.getImage(1));\r\n        }\r\n        return map;\r\n    }\r\n\r\n    private void initGUI() {\r\n        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);\r\n        setBounds(100, 100, 700, 601);\r\n        contentPane = new JPanel();\r\n        contentPane.setBorder(new EmptyBorder(0, 0, 0, 0));\r\n        setContentPane(contentPane);\r\n        contentPane.setLayout(new BorderLayout(0, 0));\r\n\r\n        modeloJLista = new DefaultListModel<>();\r\n\r\n        _pctrl = new PedidoController();\r\n\r\n        JPanel mainPanel = new JPanel();\r\n        mainPanel.setBackground(SystemColor.inactiveCaptionBorder);\r\n        contentPane.add(mainPanel, BorderLayout.CENTER);\r\n        mainPanel.setBorder(null);\r\n        mainPanel.setLayout(new CardLayout());\r\n        mainPanel.setBackground(Util._bodyColor);\r\n\r\n        scrollPane = new JScrollPane();\r\n        scrollPane.setBackground(Util._bodyColor);\r\n        mainPanel.add(scrollPane, \"name_179239712047600\");\r\n\r\n\r\n        JList<Articulo> list = new JList<Articulo>();\r\n\r\n        imageMap = createImageMap(v.getArticulos());\r\n        crearModeloJlist(v.getArticulos());\r\n        list.setModel(modeloJLista);\r\n        list.setCellRenderer(new UserArticulos.CellRenderer());\r\n        scrollPane.setViewportView(list);\r\n\r\n\r\n        list.setFixedCellHeight(250);\r\n        list.setFixedCellWidth(250);\r\n\r\n        JPanel Total_pay = new JPanel();\r\n        Total_pay.setLayout(new FlowLayout(FlowLayout.CENTER, 55, 0));\r\n        Total_pay.setBorder(new EmptyBorder(5, 0, 5, 0));\r\n        contentPane.add(Total_pay, BorderLayout.SOUTH);\r\n        Total_pay.setBackground(Util._barColor);\r\n\r\n        JButton anadirButton = new JButton();\r\n        anadirButton.setBackground(Util._barColor);\r\n        anadirButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        anadirButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                ArticleWindow ventanaArticulo = new ArticleWindow(list.getSelectedValue(), _actrl, Util.Emode.Anadir, _vctrl, v);\r\n                ventanaArticulo.setVisible(true);\r\n            }\r\n        });\r\n        \r\n        JButton volverButton_1 = new JButton();\r\n        volverButton_1.setBackground(Util._barColor);\r\n        volverButton_1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        volverButton_1.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                dispose();\r\n            }\r\n        });\r\n        volverButton_1.setText(\"volver\");\r\n        Total_pay.add(volverButton_1);\r\n\r\n        anadirButton.setText(\"A\\u00F1adir art\\u00EDculo\");\r\n        Total_pay.add(anadirButton);\r\n\r\n        JButton eliminarButton = new JButton();\r\n        eliminarButton.setBackground(Util._barColor);\r\n        eliminarButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        eliminarButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                List<Articulo> articulos = v.getArticulos();\r\n                articulos.remove(list.getSelectedValue());\r\n                v.setArticulos(articulos);\r\n                _vctrl.modificarVendedor(v);\r\n                _actrl.bajaArticulo(list.getSelectedValue().getId());\r\n            }\r\n        });\r\n        \r\n        JButton editarButton = new JButton();\r\n        editarButton.setBackground(Util._barColor);\r\n        editarButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        editarButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                ArticleWindow ventanaArticulo = new ArticleWindow(list.getSelectedValue(),_actrl, Util.Emode.Modificar, _vctrl, v);\r\n                ventanaArticulo.setVisible(true);\r\n                crearModeloJlist(v.getArticulos());\r\n                list.setModel(modeloJLista);\r\n                list.setCellRenderer(new UserArticulos.CellRenderer());\r\n                scrollPane.setViewportView(list);\r\n            }\r\n        });\r\n        editarButton.setText(\"Editar art\\u00EDculo\");\r\n        Total_pay.add(editarButton);\r\n        eliminarButton.setText(\"Elminar art\\u00EDculo\");\r\n        Total_pay.add(eliminarButton);\r\n\r\n    }\r\n\r\n    private void crearModeloJlist(List<Articulo> arts) {\r\n        modeloJLista.clear();\r\n\r\n        for (Articulo ar : arts) {\r\n            modeloJLista.addElement(ar);\r\n        }\r\n    }\r\n\r\n    public class CellRenderer extends JPanel implements ListCellRenderer<Articulo> {\r\n\r\n        Font fontt = new Font(\"Arial\", Font.BOLD, 17);\r\n        Font font = new Font(\"Arial\", Font.PLAIN, 15);\r\n        Font fontp = new Font(\"Arial\", Font.BOLD, 23);\r\n\r\n        private JLabel lblIcon = new JLabel();\r\n        private JLabel lblNombre = new JLabel();\r\n        private JLabel lblPrecio = new JLabel();\r\n        private JLabel lblDescripcion = new JLabel();\r\n\r\n        public CellRenderer() {\r\n            setLayout(new BorderLayout(50, 10));\r\n            setBorder(new LineBorder(new Color(120, 120, 120), 1));\r\n            JPanel panelText = new JPanel(new GridLayout(4, 1));\r\n            panelText.add(lblNombre);\r\n            panelText.add(lblDescripcion);\r\n            add(lblIcon, BorderLayout.WEST);\r\n            lblIcon.setBorder(new EmptyBorder(5, 15, 5, 5));\r\n            add(panelText, BorderLayout.CENTER);\r\n            add(lblPrecio, BorderLayout.EAST);\r\n            lblPrecio.setBorder(new EmptyBorder(5, 5, 5, 15));\r\n            panelText.setBackground(Util._bodyColor);\r\n            setBackground(Util._bodyColor);\r\n        }\r\n\r\n        @Override\r\n        public Component getListCellRendererComponent(JList<? extends Articulo> list, Articulo art, int index, boolean isSelected, boolean cellHasFocus) {\r\n\r\n            lblIcon.setIcon(imageMap.get(art.getId()));\r\n            lblNombre.setText(art.getNombre());\r\n            lblPrecio.setText(Double.toString(art.getPrecio()) + \"\\u20AC\");\r\n            lblDescripcion.setText(art.getDescripcion());\r\n            lblNombre.setFont(fontt);\r\n            lblPrecio.setFont(fontp);\r\n            lblDescripcion.setFont(font);\r\n            if (isSelected) {\r\n                setBorder(new LineBorder(new Color(50, 50, 120), 2));\r\n            } else {\r\n                setBorder(new LineBorder(new Color(120, 120, 120), 1));\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/View/UserArticulos.java b/src/View/UserArticulos.java
--- a/src/View/UserArticulos.java	(revision 9c7dc4ec8de4ceaf2b7744eca15f13fdba8d0b96)
+++ b/src/View/UserArticulos.java	(date 1651531275723)
@@ -104,6 +104,10 @@
 
                 ArticleWindow ventanaArticulo = new ArticleWindow(list.getSelectedValue(), _actrl, Util.Emode.Anadir, _vctrl, v);
                 ventanaArticulo.setVisible(true);
+                crearModeloJlist(v.getArticulos());
+                list.setModel(modeloJLista);
+                list.setCellRenderer(new UserArticulos.CellRenderer());
+                scrollPane.setViewportView(list);
             }
         });
         
@@ -128,9 +132,10 @@
             public void actionPerformed(ActionEvent e) {
                 List<Articulo> articulos = v.getArticulos();
                 articulos.remove(list.getSelectedValue());
-                v.setArticulos(articulos);
-                _vctrl.modificarVendedor(v);
-                _actrl.bajaArticulo(list.getSelectedValue().getId());
+                crearModeloJlist(v.getArticulos());
+                list.setModel(modeloJLista);
+                list.setCellRenderer(new UserArticulos.CellRenderer());
+                scrollPane.setViewportView(list);
             }
         });
         
Index: src/ModeloDominio/Articulo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ModeloDominio;\r\n\r\nimport Misc.Util;\r\n\r\nimport javax.swing.*;\r\n\r\n/**\r\n * esta clase representa un articulo seleccionable de la lista de articulos\r\n */\r\npublic class Articulo{\r\n\r\n    /**\r\n     * dicho articulo tiene como atributos un identificador id, un nombre, un precio, un booleano para\r\n     * ver si hay stock, una breve descripcion de sus funciones, la valoracion del producto, la familia a la que pertenece\r\n     * ese producto, el id del vendedor que vende su producto y una imagen del producto.\r\n     */\r\n    private Integer id;\r\n    private String nombre;\r\n    private Double precio;\r\n    private Boolean stock;\r\n    private String descripcion;\r\n    private Double valoracion;\r\n    private String tipo;\r\n    private Integer idVendedor;\r\n    private ImageIcon _image;\r\n\r\n    /**\r\n     * este constructor vacio se usa para valores por defecto\r\n     */\r\n    public Articulo(){\r\n        id = 0;\r\n        nombre = \"\";\r\n        stock = false;\r\n        precio = 0.0;\r\n        descripcion = \"\";\r\n        valoracion = 0.0;\r\n        tipo = \"\";\r\n        idVendedor = 0;\r\n        _image = null;\r\n    }\r\n\r\n    /**\r\n     * este constructor se usa para coger los valores de la base de datos\r\n     */\r\n    //Contructor con parametros. Lo mas seguro que se use este para coger los valores de la BBDD\r\n    public Articulo(Integer id, Double valoracion, Double precio, Integer idVendedor, String name, String descripcion,\r\n                    String tipo, Boolean stock, ImageIcon image){\r\n        this.id = id;\r\n        this.nombre = name;\r\n        this.stock = stock;\r\n        this.precio = precio;\r\n        this.descripcion = descripcion;\r\n        this.valoracion = valoracion;\r\n        this.tipo = tipo;\r\n        this.idVendedor = idVendedor;\r\n        this._image = image;\r\n    }\r\n\r\n    /**\r\n     * creamos todos los getters y los setters de los atributos de la clase\r\n     */\r\n    //region Getters y setters\r\n    public Integer getId() {\r\n        return id;\r\n    }\r\n\r\n    public String getNombre() { return nombre;}\r\n\r\n    public Boolean getStock() {\r\n        return stock;\r\n    }\r\n\r\n    public String getDescripcion() {\r\n        return descripcion;\r\n    }\r\n\r\n    public double getValoracion() {\r\n        return valoracion;\r\n    }\r\n\r\n    public int getVendedor_id(){return idVendedor;}\r\n\r\n    public String getTipo() {\r\n        return tipo;\r\n    }\r\n\r\n    public double getPrecio(){return this.precio;}\r\n\r\n    public Integer getIdVendedor() {\r\n        return idVendedor;\r\n    }\r\n\r\n    public ImageIcon getImage(double scale){return (_image == null) ? null : Util.scaleImage(_image, scale);}\r\n\r\n    public ImageIcon getImage(){return _image;}\r\n\r\n    public void setId(Integer id) {     //Al ser atributo unico seria realmente necesario el setter?\r\n        this.id = id;\r\n    }\r\n\r\n    public void setImage(ImageIcon img){this._image = img;}\r\n\r\n    public void setNombre(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n\r\n    public void setStock(Boolean stock) {\r\n        this.stock = stock;\r\n    }\r\n\r\n    public void setDescripcion(String descripcion) {\r\n        this.descripcion = descripcion;\r\n    }\r\n\r\n    public void setValoracion(Double valoracion) {\r\n        this.valoracion =  valoracion;\r\n    }\r\n\r\n    public void setTipo(String tipo) {\r\n        this.tipo = tipo;\r\n    }\r\n\r\n    public void setVendedor_id(Integer idVendedor) {\r\n        this.idVendedor = idVendedor;\r\n    }\r\n\r\n    public void setPrecio(Double precio) {\r\n        this.precio = precio;\r\n    }\r\n    //endregion\r\n\r\n    public Articulo esIgual(Articulo a){\r\n        if(a.equals(this)) return this;\r\n        else return null;\r\n    }\r\n\r\n    public ImageIcon getIcon()\r\n    {\r\n        return _image;\r\n    }\r\n\r\n    public String toString()\r\n    {\r\n        return Integer.toString(this.id);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ModeloDominio/Articulo.java b/src/ModeloDominio/Articulo.java
--- a/src/ModeloDominio/Articulo.java	(revision 9c7dc4ec8de4ceaf2b7744eca15f13fdba8d0b96)
+++ b/src/ModeloDominio/Articulo.java	(date 1651531037211)
@@ -144,4 +144,16 @@
         return Integer.toString(this.id);
     }
 
+    @Override
+    public boolean equals(Object a)
+    {
+        boolean ret = false;
+        Articulo art = (Articulo) a;
+        if (this.id == art.getId() && this.nombre.equals(art.getNombre()))
+        {
+            ret = true;
+        }
+        return ret;
+    }
+
 }
