Index: src/View/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View;\r\n\r\nimport Misc.Util;\r\nimport ModeloDominio.Comprador;\r\nimport ModeloDominio.Vendedor;\r\nimport View.Controllers.CompradorController;\r\nimport View.Controllers.PedidoController;\r\nimport View.Controllers.VendedorController;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.KeyAdapter;\r\nimport java.awt.event.KeyEvent;\r\n\r\nimport static Misc.Util.hash256;\r\n\r\n/**\r\n * esta clase es para hacer el login y ver los datos del usuario o para crear un usuario nuevo,\r\n * en esta clase se puede hacer el login tanto de un comprador como de un vendedor marcando una casilla,\r\n * o registrarse dando a register\r\n */\r\npublic class Login extends JDialog {\r\n\r\n\tprivate JPanel contentPane;\r\n\tprivate JTextField txtUsuario;\r\n\tprivate JPasswordField passwordField;\r\n\tprivate VendedorController _vctrl;\r\n\tprivate CompradorController _cctrl;\r\n\tprivate JCheckBox vendor;\r\n\tprivate int isVendor;\r\n\tprivate JPanel panel_1;\r\n\tprivate PedidoController _pctrl;\r\n\r\n\tprivate Comprador comprador;\r\n\tprivate Vendedor vendedor;\r\n\r\n\t/**\r\n\t * crea la interfaz del login, creando unos campos para poner el usuario y la contrasenia, un boton de registro\r\n\t * para registrar el susario en la base de datos que llama a las clases Regsiter_C y Register_V\r\n\t * @param cc se recibe el controller del comprador para insertar en el el registro\r\n\t * @param vc se recibe el controller del vendedor para insertar en el el registro\r\n\t */\r\n\tpublic Login(CompradorController cc, VendedorController vc, PedidoController pc) {\r\n\t\tsetTitle(\"Log In\");\r\n\t\tsetResizable(false);\r\n\t\tsetDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);\r\n\t\tsetBounds(100, 100, 299, 266);\r\n\t\tcontentPane = new JPanel();\r\n\t\tcontentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\r\n\t\tcontentPane.setLayout(new BorderLayout(0, 0));\r\n\t\tsetContentPane(contentPane);\r\n\t\tsetModal(true);\r\n\t\t_vctrl = vc;\r\n\t\t_cctrl = cc;\r\n\t\t_pctrl = pc;\r\n\t\tJPanel panel = new JPanel();\r\n\t\tpanel.setBackground(new Color(250, 235, 215));\r\n\t\tcontentPane.add(panel, BorderLayout.CENTER);\r\n\t\tpanel.setLayout(null);\r\n\r\n\t\ttxtUsuario = new JTextField();\r\n\t\ttxtUsuario.setBounds(107, 38, 105, 20);\r\n\t\tpanel.add(txtUsuario);\r\n\t\ttxtUsuario.setColumns(10);\r\n\r\n\t\tJLabel lblUsuario = new JLabel(\"Usuario:\");\r\n\t\tlblUsuario.setBounds(23, 41, 60, 14);\r\n\t\tpanel.add(lblUsuario);\r\n\r\n\t\tpasswordField = new JPasswordField();\r\n\t\tpasswordField.setBounds(107, 76, 105, 20);\r\n\t\tpanel.add(passwordField);\r\n\r\n\t\tJLabel txtPassWord = new JLabel(\"Contrase\\u00F1a:\");\r\n\t\ttxtPassWord.setBounds(23, 79, 74, 14);\r\n\t\tpanel.add(txtPassWord);\r\n\r\n\t\tJButton regbtn = new JButton(\"Registro\");\r\n\t\tregbtn.setBackground(Util._bodyColor);\r\n\t\tregbtn.setForeground(new Color(0, 0, 0));\r\n\t\tregbtn.setBounds(117, 112, 86, 23);\r\n\t\tregbtn.addActionListener(new ActionListener() {\r\n\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n\t\t\t\tsetVisible(false);\r\n\t\t\t\tif (vendor.isSelected())\r\n\t\t\t\t{\r\n\t\t\t\t\tRegister_V regv = new Register_V(_vctrl);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tRegister_C regc = new Register_C(_cctrl, _pctrl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tpanel.add(regbtn);\r\n\r\n\t\tvendor = new JCheckBox(\"Vendedor\");\r\n\t\tvendor.setBackground(Util._bodyColor);\r\n\t\tvendor.setBounds(14, 112, 97, 23);\r\n\t\tpanel.add(vendor);\r\n\r\n\t\tJSeparator separator_3 = new JSeparator();\r\n\t\tseparator_3.setBounds(107, 147, 1, 2);\r\n\t\tpanel.add(separator_3);\r\n\r\n\t\tpanel_1 = new JPanel();\r\n\t\tpanel_1 = new JPanel();\r\n\t\tpanel_1.setBackground(Util._barColor);\r\n\t\tcontentPane.add(panel_1, BorderLayout.SOUTH);\r\n\r\n\t\tJButton okaybtn = new JButton(\"Ok\");\r\n\t\tokaybtn.addActionListener(new ActionListener() {\r\n\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n\t\t\t\tif(login(txtUsuario.getText(), passwordField.getPassword()))\r\n\t\t\t\t{\r\n\t\t\t\t\tJOptionPane.showMessageDialog(null, \"LogIn correcto\");\r\n\t\t\t\t\tsetVisible(false);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tJOptionPane.showMessageDialog(panel_1, \"Usuario o contrase\\u00F1a erroneos\", \"error\", JOptionPane.ERROR_MESSAGE);\r\n\t\t\t\t}\r\n\r\n\t\t\t\taceptar();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tpasswordField.addKeyListener(new KeyAdapter() {\r\n\t\t\t@Override\r\n\t\t\tpublic void keyReleased(KeyEvent e) {\r\n\t\t\t\tif(e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n\t\t\t\t\taceptar();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\ttxtUsuario.addKeyListener(new KeyAdapter() {\r\n\t\t\t@Override\r\n\t\t\tpublic void keyReleased(KeyEvent e) {\r\n\t\t\t\tif(e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n\r\n\t\t\t\t\taceptar();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tokaybtn.setForeground(new Color(0, 0, 0));\r\n\t\tokaybtn.setBackground(Util._barColor);\r\n\t\tImageIcon iconLogo = new ImageIcon(\"resources/IconoOkey.png\");\r\n\t\tpanel_1.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));\r\n\r\n\t\tJButton Cancelbtn = new JButton(\"Cancel\");\r\n\r\n\t\tCancelbtn.addActionListener(new ActionListener() {\r\n\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n\t\t\t\tsetVisible(false);\r\n\t\t\t}\r\n\t\t});\r\n\t\tCancelbtn.setHorizontalAlignment(SwingConstants.LEFT);\r\n\t\tCancelbtn.setBackground(Util._barColor);\r\n\t\tpanel_1.add(Cancelbtn);\r\n\r\n\t\tJSeparator separator_1 = new JSeparator();\r\n\t\tpanel_1.add(separator_1);\r\n\r\n\t\tJSeparator separator = new JSeparator();\r\n\t\tpanel_1.add(separator);\r\n\r\n\t\tpanel_1.add(okaybtn);\r\n\r\n\t\tJSeparator separator_2 = new JSeparator();\r\n\t\tpanel_1.add(separator_2);\r\n\r\n\t\tJPanel panel_2 = new JPanel();\r\n\t\tpanel_2.setBackground(Util._barColor);\r\n\t\tcontentPane.add(panel_2, BorderLayout.NORTH);\r\n\r\n\t\tJLabel lblNewLabel = new JLabel(\"\");\r\n\t\tpanel_2.add(lblNewLabel);\r\n\r\n\t\tJLabel lblNewLabel_1 = new JLabel(\"Iniciar sesi\\u00F3n\");\r\n\t\tlblNewLabel_1.setFont(new Font(\"Tahoma\", Font.BOLD, 11));\r\n\t\tlblNewLabel_1.setForeground(Util._bodyColor);\r\n\t\tpanel_2.add(lblNewLabel_1);\r\n\r\n\t\tJLabel lblNewLabel_2 = new JLabel(\"\");\r\n\t\ticonLogo = new ImageIcon(\"resources/IconoZamazor.png\");\r\n\t\tlblNewLabel_2.setIcon(iconLogo);\r\n\t\tpanel_2.add(lblNewLabel_2);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * al recibir esta funcion un nombre de ususario y una contrasenia si esta la checkbox desactivada\r\n\t * intenta consultar el comprador en la base de datos y compara la contrasenia de la base de datos\r\n\t * con la escrita por el usuario si es correcta la funcion devuelve true.\r\n\t * @param username username insertado por el ususario\r\n\t * @param password contrase√±a insertada por el usuario\r\n\t * @return devuelve un booleano si es que se ha completado el login\r\n\t */\r\n\tprivate boolean login(String username, char[] password)\r\n\t{\r\n\t\tboolean ret = false;\r\n\t\tif (!vendor.isSelected())\r\n\t\t{\r\n\t\t\tComprador buffer = _cctrl.consultarComprador(username);\r\n\t\t\tif (buffer.getCuenta() != null)\r\n\t\t\t{\r\n\t\t\t\tString real = buffer.getPassword().toLowerCase();\r\n\t\t\t\tString in = hash256(new String(password)).toLowerCase();\r\n\t\t\t\tif(real.equals(in))\r\n\t\t\t\t{\r\n\t\t\t\t\tcomprador = buffer;\r\n\t\t\t\t\tisVendor = 2;\r\n\t\t\t\t\tret = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tVendedor buffer = _vctrl.consultarVendedor(username);\r\n\t\t\tif (buffer.getNombre() != null)\r\n\t\t\t{\r\n\t\t\t\tif(buffer.getPassword().toLowerCase().equals(hash256(new String(password)).toLowerCase()))\r\n\t\t\t\t{\r\n\t\t\t\t\tvendedor = buffer;\r\n\t\t\t\t\tisVendor = 1;\r\n\t\t\t\t\tret = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * @return devuelve el comprador registrado\r\n\t */\r\n\tpublic Comprador getComprador()\r\n\t{\r\n\t\treturn this.comprador;\r\n\t}\r\n\t/**\r\n\t * @return devuelve el vendedor registrado\r\n\t */\r\n\tpublic Vendedor getVendedor()\r\n\t{\r\n\t\treturn this.vendedor;\r\n\t}\r\n\r\n\t/**\r\n\t * @return este entero simboliza si un usuario es un comprador, un vendedor,\r\n\t * o si el login esta en su estado por defecto, ya que en la ventana pricipal\r\n\t * al no haberse registrado,a interfaz es para registrarse pero al haberse\r\n\t * registrado la interfaz cambia segun el valor que tenga este numero\r\n\t */\r\n\tpublic int getIsVendedor()\r\n\t{\r\n\t\treturn this.isVendor;\r\n\t}\r\n\r\n\tprivate void aceptar()\r\n\t{\r\n\t\tif(login(txtUsuario.getText(), passwordField.getPassword()))\r\n\t\t{\r\n\t\t\tJOptionPane.showMessageDialog(null, \"LogIn correcto\");\r\n\t\t\tsetVisible(false);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tJOptionPane.showMessageDialog(panel_1, \"Usuario o contrase\\u00F1a erroneos\", \"error\", JOptionPane.ERROR_MESSAGE);\r\n\t\t}\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/View/Login.java b/src/View/Login.java
--- a/src/View/Login.java	(revision c70b90f4ca0161175a084cbff94b4d5dd5517307)
+++ b/src/View/Login.java	(date 1651426079997)
@@ -114,16 +114,6 @@
 		JButton okaybtn = new JButton("Ok");
 		okaybtn.addActionListener(new ActionListener() {
 			public void actionPerformed(ActionEvent e) {
-				if(login(txtUsuario.getText(), passwordField.getPassword()))
-				{
-					JOptionPane.showMessageDialog(null, "LogIn correcto");
-					setVisible(false);
-				}
-				else
-				{
-					JOptionPane.showMessageDialog(panel_1, "Usuario o contrase\u00F1a erroneos", "error", JOptionPane.ERROR_MESSAGE);
-				}
-
 				aceptar();
 			}
 		});
Index: src/View/MainWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View;\r\n\r\nimport Misc.Util;\r\nimport ModeloDominio.Articulo;\r\nimport ModeloDominio.Comprador;\r\nimport ModeloDominio.Vendedor;\r\nimport View.Controllers.ArticuloController;\r\nimport View.Controllers.CompradorController;\r\nimport View.Controllers.PedidoController;\r\nimport View.Controllers.VendedorController;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport javax.swing.border.LineBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n * esta clase es la ventana principal de la interfaz donde estan listados por defecto todos los productos\r\n * y con la barra de busqueda puedes buscar los productos que tengan un nombre similar a lo escrito.\r\n * Tambien hay un boton de login que sirve tambien para registrarse.\r\n * TODO PONER MAS INFORMACION DE LAS CLASES SI ES QUE FALTAN\r\n */\r\npublic class MainWindow {\r\n\r\n    private JFrame frame;\r\n    private JTextField buscadorTXT;\r\n    private DefaultListModel<Articulo> modeloJLista;\r\n    JLabel loginIcon;\r\n    JScrollPane scrollPane;\r\n    JLabel[] labelsParaImagenes;\r\n    private Map<Integer, ImageIcon> imageMap;\r\n\r\n    private Comprador comp = null;\r\n    private Vendedor vend = null;\r\n\r\n    private int vendor = 0;//0 nothing, 1 vendor, 2 buyer\r\n \r\n    private JList<Articulo> list;\r\n\r\n\r\n    private ArticuloController _actrl;\r\n    private CompradorController _cctrl;\r\n    private PedidoController _pctrl;\r\n    private VendedorController _vctrl;\r\n\r\n\r\n    /**\r\n     * esta constructora solo inicia el metodo iniciar que inicializa la interfaz\r\n     */\r\n    public MainWindow() {\r\n        Util.startConnection();\r\n        _actrl = new ArticuloController();\r\n        _cctrl = new CompradorController();\r\n        _pctrl = new PedidoController();\r\n        _vctrl = new VendedorController();\r\n        initialize();\r\n    }\r\n\r\n    private Map<Integer, ImageIcon> createImageMap(List<Articulo> fullTable) {\r\n    \r\n        Map<Integer, ImageIcon> map = new HashMap<>();\r\n        for (Articulo s : fullTable) {\r\n            map.put(s.getId(), s.getImage(1));            \r\n        }\r\n        return map;\r\n    }\r\n\r\n    /**\r\n     * crea la interfaz principal que contiene todos los articulos enlistados por defecto\r\n     * la barra de busqueda para buscar articulos en la base de datos y incluirlos en la interfaz, y un boton de\r\n     * login que lleva a la clase de login para registrarse como comprador o vendedor\r\n     */\r\n    private void initialize() {\r\n        frame = new JFrame();\r\n        frame.setBounds(100, 100, 596, 428);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setResizable(true);\r\n        frame.setExtendedState(frame.getExtendedState() | JFrame.MAXIMIZED_BOTH);\r\n        frame.addWindowListener(new WindowAdapter() {\r\n            public void windowClosing(WindowEvent e) {\r\n                Util.closeConnection();\r\n            }\r\n        });\r\n\r\n        modeloJLista = new DefaultListModel<>();\r\n\r\n        JPanel panel = new JPanel();\r\n        panel.setBackground(Util._barColor);\r\n        frame.getContentPane().add(panel, BorderLayout.NORTH);\r\n        panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));\r\n\r\n        JPanel panel_1 = new JPanel();\r\n        panel_1.setBackground(Util._barColor);\r\n        FlowLayout flowLayout = (FlowLayout) panel_1.getLayout();\r\n        flowLayout.setAlignment(FlowLayout.LEFT);\r\n        panel.add(panel_1, BorderLayout.CENTER);\r\n\r\n        JLabel fotoZamazor = new JLabel();\r\n        ImageIcon iconLogo = Util.scaleImage(new ImageIcon(\"resources/IconoZamazor.png\"), 3);\r\n        fotoZamazor.setIcon(iconLogo);\r\n        panel_1.add(fotoZamazor);\r\n\r\n        JPanel panel_2 = new JPanel();\r\n        panel_2.setBackground(Util._barColor);\r\n        panel.add(panel_2);\r\n\r\n        buscadorTXT = new JTextField();\r\n        buscadorTXT.setFont(new Font(\"Tahoma\", Font.PLAIN, 20));\r\n        buscadorTXT.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyReleased(KeyEvent e) {\r\n                if(e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n                    String texto = buscadorTXT.getText().toLowerCase();\r\n                    filter(texto);\r\n                }\r\n            }\r\n        });\r\n        panel_2.add(buscadorTXT);\r\n        buscadorTXT.setColumns(40);\r\n\r\n        JButton botonBuscar = new JButton(\"\");\r\n        //botonBuscar.setBorderPainted(false);\r\n        botonBuscar.setBackground(Util._barColor);\r\n        botonBuscar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        iconLogo = new ImageIcon(\"resources/search.png\");\r\n        botonBuscar.setIcon(iconLogo);\r\n        botonBuscar.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                String texto = buscadorTXT.getText().toLowerCase();\r\n                filter(texto);\r\n            }\r\n        });\r\n        panel_2.add(botonBuscar);\r\n\r\n\r\n        JPanel panel_3 = new JPanel();\r\n        panel_3.setBackground(Util._barColor);\r\n        FlowLayout flowLayout_1 = (FlowLayout) panel_3.getLayout();\r\n        flowLayout_1.setAlignment(FlowLayout.RIGHT);\r\n        panel.add(panel_3);\r\n\r\n        JLabel logoutIcon = new JLabel();\r\n        logoutIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        logoutIcon.addMouseListener(new MouseAdapter() {\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n                    if (vendor != 0)\r\n                    {\r\n                        vendor = 0;\r\n                        vend = null;\r\n                        comp = null;\r\n                        JOptionPane.showMessageDialog(null, \"Loged out\");\r\n                    }\r\n                }\r\n        });\r\n        logoutIcon.setIcon(Util.scaleImage(new ImageIcon(\"resources/Log-out.png\"), 0.04));\r\n\r\n        panel_3.add(logoutIcon);\r\n        \r\n        loginIcon = new JLabel();\r\n        loginIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        loginIcon.addMouseListener(new MouseAdapter() {\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n                if (vendor == 0)\r\n                {\r\n                    Login login = new Login(_cctrl, _vctrl, _pctrl);\r\n                    login.setVisible(true);\r\n                    if(login.getIsVendedor() == 1)\r\n                    {\r\n                        vend = login.getVendedor();\r\n                        vendor = 1;\r\n                    }\r\n                    else if(login.getIsVendedor() == 2)\r\n                    {\r\n                        comp = login.getComprador();\r\n                        vendor = 2;\r\n                    }\r\n                }\r\n                else if(vendor == 1)\r\n                {\r\n                    UserInfoWindow userInfo = new UserInfoWindow(vend, _vctrl);\r\n                }\r\n                else if(vendor == 2)\r\n                {\r\n                    UserInfoWindow userInfo = new UserInfoWindow(comp, _cctrl);\r\n                }\r\n                else\r\n                {\r\n                    UserInfoWindow userInfo = new UserInfoWindow();\r\n                }\r\n\r\n            }\r\n        });\r\n        iconLogo = Util.scaleImage(new ImageIcon(\"resources/user.png\"), 0.04);\r\n        loginIcon.setIcon(iconLogo);\r\n        panel_3.add(loginIcon);\r\n\r\n\r\n        JPanel panel_4 = new JPanel();\r\n        panel_4.setBackground(SystemColor.inactiveCaptionBorder);\r\n        frame.getContentPane().add(panel_4, BorderLayout.CENTER);\r\n        panel_4.setBorder(null);\r\n        panel_4.setBackground(Util._bodyColor);\r\n        panel_4.setLayout(new CardLayout());\r\n\r\n        scrollPane = new JScrollPane();\r\n        scrollPane.setBackground(Util._bodyColor);\r\n        panel_4.add(scrollPane, \"name_179239712047600\");\r\n\r\n\r\n        list = new JList<Articulo>();\r\n        list.addMouseListener(new MouseAdapter() {\r\n            @Override\r\n            public void mouseClicked(MouseEvent arg0) {\r\n                eventoClickArticulo();\r\n            }\r\n        });\r\n        list.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n\r\n        imageMap = createImageMap(fullTable());\r\n        crearModeloJlist(fullTable());\r\n        list.setModel(modeloJLista);\r\n        list.setCellRenderer(new CellRenderer());\r\n        scrollPane.setViewportView(list);\r\n\r\n\r\n        list.setFixedCellHeight(250);\r\n        list.setFixedCellWidth(250);\r\n        //JLabel lblNewLabel = new JLabel(\"New label\");\r\n        //scrollPane.setRowHeaderView(lblNewLabel);\r\n\r\n    }\r\n\r\n    protected void eventoClickArticulo() {\r\n    \tArticleWindow ventanaArticulo = new ArticleWindow(this, list.getSelectedValue());\r\n    \tventanaArticulo.setVisible(true);\r\n\t\t\r\n\t}\r\n\r\n    private void filter(String texto) {\r\n        crearModeloJlist(_actrl.buscarArticulo(texto));\r\n        list.setModel(modeloJLista);\r\n    }\r\n\r\n\tprivate void crearModeloJlist(List<Articulo> arts) {\r\n        modeloJLista.clear();\r\n        for (Articulo ar : arts) {\r\n            modeloJLista.addElement(ar);\r\n        }\r\n\r\n    }\r\n\r\n    private List<Articulo> fullTable() {\r\n\r\n        return _actrl.fullTable();\r\n    }\r\n\r\n    public void setVisible(boolean b) {\r\n        frame.setVisible(b);\r\n    }\r\n    /**\r\n     * esta funcion consulta un articulo en la base de datos llamando a la funcion\r\n     * del controller, si no hay un articulo con el mismo id se muestra un mensaje de error\r\n     * indicando la falta de un id igual al del articulo que se queria consultar\r\n     * @param id es el id del articulo que se quiere modificar en la base de datos\r\n     */\r\n    \r\n    public Articulo consultarArticulo(int id)\r\n\t{\r\n\t\tArticulo ret = _actrl.consultarArticulo(id);\r\n\t\tif(ret == null)\r\n\t\t{\r\n\t\t\tJOptionPane.showMessageDialog(frame, \"Id not found\", \"error\", JOptionPane.ERROR_MESSAGE);\r\n\t\t}\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n    /**\r\n     * esta funcion modifica un articulo en la base de datos llamando a la funcion\r\n     * del controller, si no hay un articulo con el mismo id se muestra un mensaje de error\r\n     * indicando la falta de un id igual al del articulo que se queria modificar\r\n     * @param a es el articulo que se quiere modificar en la base de datos\r\n     */\r\n\tpublic void modificarArticulo(Articulo a) {\r\n\t\tif(!_actrl.modificarArticulo(a))\r\n\t\t{\r\n\t\t\tJOptionPane.showMessageDialog(frame, \"Id not found\", \"error\", JOptionPane.ERROR_MESSAGE);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n    /**\r\n     * esta funcion inserta un articulo en la base de datos llamando a la funcion\r\n     * del controller, si ya hay un articulo con el mismo id se muestra un mensaje de error\r\n     * indicando la existencia de un id igual al articulo que se queria insertar\r\n     * @param a es el articulo que se quiere insertar en la base de datos\r\n     */\r\n\tpublic void altaArticulo(Articulo a) {\r\n\t\tif(!_actrl.altaArticulo(a))\r\n\t\t{\r\n\t\t\tJOptionPane.showMessageDialog(frame, \"Id already exists\", \"error\", JOptionPane.ERROR_MESSAGE);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n    public class CellRenderer extends JPanel implements ListCellRenderer<Articulo> {\r\n\r\n        Font fontt = new Font(\"Arial\", Font.BOLD, 17);\r\n        Font font = new Font(\"Arial\", Font.PLAIN, 15);\r\n        Font fontp = new Font(\"Arial\", Font.BOLD, 23);\r\n\r\n        private JLabel lblIcon = new JLabel();\r\n        private JLabel lblNombre = new JLabel();\r\n        private JLabel lblPrecio = new JLabel();\r\n        private JLabel lblDescripcion = new JLabel();\r\n\r\n        public CellRenderer()\r\n        {\r\n            setLayout(new BorderLayout(50, 10));\r\n            setBorder(new LineBorder(new Color(120, 120, 120), 1));\r\n            JPanel panelText = new JPanel(new GridLayout(4, 1));\r\n            panelText.add(lblNombre);\r\n            panelText.add(lblPrecio);\r\n            panelText.add(lblDescripcion);\r\n            add(Box.createRigidArea(new Dimension(5, 0)), BorderLayout.WEST);\r\n            add(lblIcon, BorderLayout.WEST);\r\n            lblIcon.setBorder(new EmptyBorder(5, 15, 5, 5));\r\n            add(panelText, BorderLayout.CENTER);\r\n            panelText.setBackground(Util._bodyColor);\r\n            setBackground(Util._bodyColor);\r\n        }\r\n\r\n        @Override\r\n        public Component getListCellRendererComponent(JList<? extends Articulo> list, Articulo art, int index,boolean isSelected, boolean cellHasFocus) {\r\n\r\n            lblIcon.setIcon(imageMap.get(art.getId()));\r\n            lblNombre.setText(art.getNombre());\r\n            lblPrecio.setText(Double.toString(art.getPrecio()) + \"\\u20AC\");\r\n            lblDescripcion.setText(art.getDescripcion());\r\n            lblNombre.setFont(fontt);\r\n            lblPrecio.setFont(fontp);\r\n            lblDescripcion.setFont(font);\r\n            if (isSelected) {\r\n            \tsetBorder(new LineBorder(new Color(50, 50, 120), 2));\r\n\t\t\t}\r\n            else\r\n            {\r\n                setBorder(new LineBorder(new Color(120, 120, 120), 1));\r\n            }\r\n            return this;\r\n        }\r\n        \r\n    \t\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/View/MainWindow.java b/src/View/MainWindow.java
--- a/src/View/MainWindow.java	(revision c70b90f4ca0161175a084cbff94b4d5dd5517307)
+++ b/src/View/MainWindow.java	(date 1651422656431)
@@ -237,7 +237,7 @@
     }
 
     protected void eventoClickArticulo() {
-    	ArticleWindow ventanaArticulo = new ArticleWindow(this, list.getSelectedValue());
+    	ArticleWindow ventanaArticulo = new ArticleWindow(this, list.getSelectedValue(), comp, _cctrl);
     	ventanaArticulo.setVisible(true);
 		
 	}
Index: src/View/ArticleWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View;\r\n\r\nimport Misc.Util;\r\nimport ModeloDominio.Articulo;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.KeyAdapter;\r\nimport java.awt.event.KeyEvent;\r\n\r\npublic class ArticleWindow extends JDialog {\r\n\r\n\tprivate JPanel contentPane;\r\n\tprivate JTextField idTxtField;\r\n\tprivate JTextField nombreTextField;\r\n\tprivate JTextField descTextField;\r\n\tprivate JTextField valTextField;\r\n\tprivate JTextField precioTxtField;\r\n\tprivate JTextField tipoTextField;\r\n\tprivate JTextField idVendTextField;\r\n\tprivate JCheckBox stockCheckBox;\r\n\tprivate MainWindow mainWindow;\r\n\tprivate ImageIcon _image;\r\n\r\n\tprivate Articulo articulo;\r\n\r\n\tpublic ArticleWindow(MainWindow mainWindow, Articulo articulo) {\r\n\r\n\t\tsetModal(true);\r\n\r\n\t\tthis.mainWindow = mainWindow;\r\n\r\n\t\tthis.articulo = articulo;\r\n\r\n\t\t//setBounds(100, 100, 500, 400);\r\n\t\tsetLocation(100, 100);\r\n\t\tsetMinimumSize(new Dimension(500, 500));\r\n\t\tcontentPane = new JPanel();\r\n\t\tcontentPane.setBackground(Util._bodyColor);\r\n\t\t//contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\r\n\t\tcontentPane.setLayout(new BorderLayout(0, 0));\r\n\t\tsetContentPane(contentPane);\r\n\t\t\r\n\t\tJPanel panel = new JPanel();\r\n\t\tpanel.setBackground(Util._bodyColor);\r\n\t\tcontentPane.add(panel, BorderLayout.CENTER);\r\n\t\tpanel.setLayout(new GridLayout(0, 2, 0, 0));\r\n\t\t\r\n\t\tJLabel idLabel = new JLabel(\"Id:\");\r\n\t\tidLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(idLabel);\r\n\t\t\r\n\t\tidTxtField = new JTextField();\r\n\t\tidTxtField.setHorizontalAlignment(SwingConstants.LEFT);\r\n\t\tidTxtField.setBackground(Util._bodyColor);\r\n\t\tidTxtField.setBorder(new EmptyBorder(0,0,0,0));\r\n\t\tpanel.add(idTxtField);\r\n\t\tidTxtField.setColumns(10);\r\n\t\tidTxtField.addKeyListener(new KeyAdapter() {\r\n\t\t\t@Override\r\n\t\t\tpublic void keyReleased(KeyEvent e) {\r\n\t\t\t\t//fillFields();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tJLabel nombrelbl = new JLabel(\"Nombre:\");\r\n\t\tnombrelbl.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(nombrelbl);\r\n\t\t\r\n\t\tnombreTextField = new JTextField();\r\n\t\tnombreTextField.setHorizontalAlignment(SwingConstants.LEFT);\r\n\t\tnombreTextField.setBackground(Util._bodyColor);\r\n\t\tnombreTextField.setColumns(10);\r\n\t\tnombreTextField.setBorder(new EmptyBorder(0,0,0,0));\r\n\t\tpanel.add(nombreTextField);\r\n\r\n\t\tJLabel precioLbl = new JLabel(\"Precio:\");\r\n\t\tprecioLbl.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(precioLbl);\r\n\r\n\t\tprecioTxtField = new JTextField();\r\n\t\tprecioTxtField.setHorizontalAlignment(SwingConstants.LEFT);\r\n\t\tprecioTxtField.setBackground(Util._bodyColor);\r\n\t\tprecioTxtField.setBorder(new EmptyBorder(0,0,0,0));\r\n\t\tpanel.add(precioTxtField);\r\n\t\tprecioTxtField.setColumns(10);\r\n\t\t\r\n\t\tJLabel stocklbl = new JLabel(\"Stock:\");\r\n\t\tstocklbl.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(stocklbl);\r\n\t\t\r\n\t\tstockCheckBox = new JCheckBox(\"\");\r\n\t\tstockCheckBox.setBackground(Util._bodyColor);\r\n\t\tstockCheckBox.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(stockCheckBox);\r\n\t\t\r\n\t\tJLabel desclabel = new JLabel(\"Descripcion:\");\r\n\t\tdesclabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(desclabel);\r\n\t\t\r\n\t\tdescTextField = new JTextField();\r\n\t\tdescTextField.setBackground(Util._bodyColor);\r\n\t\tdescTextField.setColumns(10);\r\n\t\tdescTextField.setBorder(new EmptyBorder(0,0,0,0));\r\n\t\tpanel.add(descTextField);\r\n\t\t\r\n\t\tJLabel valLbl = new JLabel(\"Valoracion:\");\r\n\t\tvalLbl.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(valLbl);\r\n\t\t\r\n\t\tvalTextField = new JTextField();\r\n\t\tvalTextField.setBackground(Util._bodyColor);\r\n\t\tvalTextField.setColumns(10);\r\n\t\tvalTextField.setBorder(new EmptyBorder(0,0,0,0));\r\n\t\tpanel.add(valTextField);\r\n\t\t\r\n\t\tJLabel tipoLbl = new JLabel(\"Tipo:\");\r\n\t\ttipoLbl.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(tipoLbl);\r\n\t\t\r\n\t\ttipoTextField = new JTextField();\r\n\t\ttipoTextField.setBackground(Util._bodyColor);\r\n\t\ttipoTextField.setColumns(10);\r\n\t\ttipoTextField.setBorder(new EmptyBorder(0,0,0,0));\r\n\t\tpanel.add(tipoTextField);\r\n\t\t\r\n\t\tJLabel lblVendedor = new JLabel(\"Id vendedor:\");\r\n\t\tlblVendedor.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\tpanel.add(lblVendedor);\r\n\t\t\r\n\t\tidVendTextField = new JTextField();\r\n\t\tidVendTextField.setBackground(Util._bodyColor);\r\n\t\tpanel.add(idVendTextField);\r\n\t\tidVendTextField.setBorder(new EmptyBorder(0,0,0,0));\r\n\t\tidVendTextField.setColumns(10);\r\n\t\t\r\n\t\tJPanel panel_1 = new JPanel();\r\n\t\tpanel_1.setBackground(Util._barColor);\r\n\t\tcontentPane.add(panel_1, BorderLayout.NORTH);\r\n\t\t\r\n\t\tJLabel zamazorBlancoIcon = new JLabel(\"\");\r\n\t\tImageIcon iconLogo = new ImageIcon(\"resources/IconoZamazor.png\");\r\n\t\tzamazorBlancoIcon.setIcon(iconLogo);\r\n\t\tpanel_1.add(zamazorBlancoIcon);\r\n\t\t\r\n\t\tJPanel panel_2 = new JPanel();\r\n\t\tFlowLayout flowLayout = (FlowLayout) panel_2.getLayout();\r\n\t\tflowLayout.setAlignment(FlowLayout.RIGHT);\r\n\t\tpanel_2.setBackground(Util._barColor);\r\n\t\tcontentPane.add(panel_2, BorderLayout.SOUTH);\r\n\r\n\r\n\t\tJButton aceptarButton = new JButton(\"Aceptar\");\r\n\t\taceptarButton.setBackground(Util._barColor);\r\n\t\taceptarButton.addActionListener(new ActionListener() {\r\n\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n\t\t\t\taceptar();\r\n\t\t\t}\r\n\t\t});\r\n\t\ticonLogo = new ImageIcon(\"resources/IconoOkey.png\");\r\n\t\taceptarButton.setIcon(iconLogo);\r\n\r\n\r\n\r\n\t\tidTxtField.setEditable(false);\r\n\t\t//aceptarButton.setVisible(false);\r\n\t\tnombreTextField.setEditable(false);\r\n\t\tdescTextField.setEditable(false);\r\n\t\tvalTextField.setEditable(false);\r\n\t\tprecioTxtField.setEditable(false);\r\n\t\ttipoTextField.setEditable(false);\r\n\t\tidVendTextField.setEditable(false);\r\n\t\tstockCheckBox.setEnabled(false);\r\n\r\n\t\tpanel_2.add(aceptarButton);\r\n\r\n\t\tfillFields();\r\n\r\n\t\tJPanel panelImage = new JPanel();\r\n\t\tpanelImage.setBackground(Util._bodyColor);\r\n\t\tpanelImage.setLayout(new BorderLayout());\r\n\t\tcontentPane.add(panelImage, BorderLayout.EAST);\r\n\t\tJLabel imageLabel = new JLabel(_image);\r\n\t\tpanelImage.add(Box.createRigidArea(new Dimension(50, 0)), BorderLayout.WEST);\r\n\t\tpanelImage.add(Box.createRigidArea(new Dimension(50, 0)), BorderLayout.EAST);\r\n\t\tpanelImage.add(imageLabel, BorderLayout.CENTER);\r\n\t\tJPanel fcpPanel = new JPanel();\r\n\t\tFlowLayout flowLayout_1 = (FlowLayout) fcpPanel.getLayout();\r\n\t\tflowLayout_1.setAlignment(FlowLayout.RIGHT);\r\n\t\tfcpPanel.setBackground(Util._bodyColor);\r\n\t\tpanelImage.add(fcpPanel, BorderLayout.SOUTH);\r\n\r\n\r\n\r\n\t}\r\n\r\n\tpublic void aceptar(){\r\n\t\tthis.setVisible(false);\r\n\t}\r\n\r\n\tpublic void fillFields()\r\n\t{\r\n\t\tSystem.out.print(articulo.getNombre());\r\n\t\tif (articulo != null)\r\n\t\t{\r\n\t\t\t_image = articulo.getImage();\r\n\t\t\tidTxtField.setText(articulo.getId().toString());\r\n\t\t\tnombreTextField.setText(articulo.getNombre());\r\n\t\t\tnombreTextField.setCaretPosition(0);\r\n\t\t\tdescTextField.setText(articulo.getDescripcion());\r\n\t\t\tdescTextField.setCaretPosition(0);\r\n\t\t\tprecioTxtField.setText(Double.toString(articulo.getPrecio()));\r\n\t\t\tvalTextField.setText(Double.toString(articulo.getValoracion()));\r\n\t\t\ttipoTextField.setText(articulo.getTipo());\r\n\t\t\tidVendTextField.setText(Integer.toString(articulo.getVendedor_id()));\r\n\t\t\tstockCheckBox.setSelected(articulo.getStock());\r\n\t\t}\r\n\t\t \r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/View/ArticleWindow.java b/src/View/ArticleWindow.java
--- a/src/View/ArticleWindow.java	(revision c70b90f4ca0161175a084cbff94b4d5dd5517307)
+++ b/src/View/ArticleWindow.java	(date 1651427136526)
@@ -2,6 +2,10 @@
 
 import Misc.Util;
 import ModeloDominio.Articulo;
+import ModeloDominio.Comprador;
+import ModeloDominio.Pedido;
+import View.Controllers.CompradorController;
+import View.Controllers.PedidoController;
 
 import javax.swing.*;
 import javax.swing.border.EmptyBorder;
@@ -10,6 +14,7 @@
 import java.awt.event.ActionListener;
 import java.awt.event.KeyAdapter;
 import java.awt.event.KeyEvent;
+import java.util.List;
 
 public class ArticleWindow extends JDialog {
 
@@ -24,17 +29,25 @@
 	private JCheckBox stockCheckBox;
 	private MainWindow mainWindow;
 	private ImageIcon _image;
+	private CompradorController _cctrl;
 
 	private Articulo articulo;
 
-	public ArticleWindow(MainWindow mainWindow, Articulo articulo) {
+	private Comprador comp;
+
+	public ArticleWindow(MainWindow mainWindow, Articulo articulo, Comprador comp, CompradorController _cctrl) {
 
 		setModal(true);
 
+
+
 		this.mainWindow = mainWindow;
 
 		this.articulo = articulo;
 
+		this.comp = comp;
+
+		this._cctrl = _cctrl;
 		//setBounds(100, 100, 500, 400);
 		setLocation(100, 100);
 		setMinimumSize(new Dimension(500, 500));
@@ -148,6 +161,7 @@
 		
 		JPanel panel_2 = new JPanel();
 		FlowLayout flowLayout = (FlowLayout) panel_2.getLayout();
+		flowLayout.setHgap(15);
 		flowLayout.setAlignment(FlowLayout.RIGHT);
 		panel_2.setBackground(Util._barColor);
 		contentPane.add(panel_2, BorderLayout.SOUTH);
@@ -163,6 +177,19 @@
 		iconLogo = new ImageIcon("resources/IconoOkey.png");
 		aceptarButton.setIcon(iconLogo);
 
+		JButton cart = new JButton("A\u00F1adir al carrito");
+		cart.setBackground(Util._barColor);
+		cart.addActionListener(new ActionListener() {
+			public void actionPerformed(ActionEvent e) {
+				addToCart();
+			}
+		});
+		if (comp != null)
+		{
+			panel_2.add(cart);
+		}
+		panel_2.add(aceptarButton);
+
 
 
 		idTxtField.setEditable(false);
@@ -175,8 +202,6 @@
 		idVendTextField.setEditable(false);
 		stockCheckBox.setEnabled(false);
 
-		panel_2.add(aceptarButton);
-
 		fillFields();
 
 		JPanel panelImage = new JPanel();
@@ -197,11 +222,11 @@
 
 	}
 
-	public void aceptar(){
+	private void aceptar(){
 		this.setVisible(false);
 	}
 
-	public void fillFields()
+	private void fillFields()
 	{
 		System.out.print(articulo.getNombre());
 		if (articulo != null)
@@ -220,5 +245,21 @@
 		}
 		 
 	}
+	
+	private void addToCart()
+	{
+		PedidoController _pctrl = new PedidoController();//Temporal
+		Pedido cart = _pctrl.consultarPedido(comp.getId(), true);
+		List<Pedido> pedidos = comp.getPedidos();
+		pedidos.remove(cart);
+		List<Articulo> arts = cart.getArticulos();
+		arts.add(articulo);
+		cart.setArticulos(arts);
+		pedidos.add(cart);
+		comp.setPedidos(pedidos);
+		_pctrl.modificarPedido(cart);
+		JOptionPane.showMessageDialog(null, "Articulo a√±adido a su cesta");
+		dispose();
+	}
 
 }
